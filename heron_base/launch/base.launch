<launch>
  <arg name="namespace" value="$(optenv ROBOT_NAMESPACE)" />

  <!-- If the IMU does not publish magnetometer data, this should be set to false -->
  <arg name="use_mag"   default="$(optenv HERON_MAGNETOMETER_ENABLED true)" />

  <include file="$(find heron_description)/launch/description.launch">
    <arg name="namespace" value="$(arg namespace)" />
  </include>

  <group ns="/$(arg namespace)">

    <arg name="port" default="/dev/arduino" />
    <node pkg="rosserial_server" type="serial_node" name="rosserial_server">
      <param name="port" value="$(arg port)" />
      <remap from="has_wifi" to="wireless/connected" />
    </node>

    <!-- TODO: Eliminate this by compiling the necessary message definitions into heron_base. -->
    <node pkg="rosserial_python" type="message_info_service.py" name="rosserial_message_info" />

    <group if="$(optenv HERON_NO_WIRELESS false)">
      <node ns="wireless" pkg="heron_base" name="no_wifi_lights" type="no_wireless_lights.py" respawn="true" />
    </group>

    <group unless="$(optenv HERON_NO_WIRELESS false)">
      <group if="$(optenv USE_SNMP_CHECK_NODE true)">
        <node pkg="heron_base" type="snmp_lights.py" name="wifi_lights">
          <param name="~ip_addr" value="$(optenv SNMP_IP 192.168.131.50)" />
        </node>
      </group>

      <group unless="$(optenv USE_SNMP_CHECK_NODE true)">
        <node ns="wireless" pkg="wireless_watcher" name="wireless_watcher" type="watcher_node" respawn="true" />
      </group>
    </group>

    <group unless="$(optenv HERON_IMU_UM6 0)">
      <!-- newer herons use the microstrain CM5-25 IMU -->
      <group if="$(eval arg('namespace') == '')">
        <include file="$(find ros_mscl)/launch/microstrain.launch">
          <arg name="name"          value="imu" />
          <arg name="port"          value="$(optenv HERON_IMU_PORT /dev/microstrain)" />
          <arg name="imu_frame_id"  value="imu_link" />
          <arg name="use_enu_frame" value="true" />
        </include>
        <node pkg="topic_tools" type="relay" name="imu_data_relay" args="/imu/imu/data /imu/data_raw" />
        <node pkg="topic_tools" type="relay" name="imu_mag_relay" args="/imu/mag /imu/mag" />
      </group>

      <group unless="$(eval arg('namespace') == '')">
        <include file="$(find ros_mscl)/launch/microstrain.launch">
          <arg name="name"          value="imu" />
          <arg name="port"          value="$(optenv HERON_IMU_PORT /dev/microstrain)" />
          <arg name="imu_frame_id"  value="$(arg namespace)/imu_link" />
          <arg name="use_enu_frame" value="true" />
        </include>
        <node pkg="topic_tools" type="relay" name="imu_data_relay" args="$(arg namespace)/imu/imu/data $(arg namespace)/imu/data_raw" />
        <node pkg="topic_tools" type="relay" name="imu_mag_relay" args="$(arg namespace)/imu/mag $(arg namespace)/imu/mag" />
      </group>
    </group>
    <group if="$(optenv HERON_IMU_UM6 0)">
      <!-- older herons use the UM6 IMU -->
      <group if="$(eval arg('namespace') == '')">
       <node pkg="um6" type="um6_driver" name="um6_driver" output="screen">
         <param name="tf_ned_to_enu" value="true"/>
         <param name="/um6_driver/port" value="$(optenv HERON_IMU_UM6_PORT /dev/clearpath/imu)" />
         <remap from="imu/data" to="imu/data_raw" />
         <param name="lt_model" value="true" />
         <param name="linear_acceleration_stdev" value="0.38" />
         <param name="frame_id" value="imu_link" />
       </node>
      </group>

      <group unless="$(eval arg('namespace') == '')">
       <node pkg="um6" type="um6_driver" name="um6_driver" output="screen">
         <param name="tf_ned_to_enu" value="true"/>
         <param name="/um6_driver/port" value="$(optenv HERON_IMU_UM6_PORT /dev/clearpath/imu)" />
         <remap from="imu/data" to="imu/data_raw" />
         <param name="lt_model" value="true" />
         <param name="linear_acceleration_stdev" value="0.38" />
         <param name="frame_id" value="$(arg namespace)/imu_link" />
       </node>
      </group>
    </group>

    <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter_madgwick">
      <rosparam file="$(env HERON_MAG_CONFIG)" />
      <param name="~use_mag" value="$(arg use_mag)" />
      <param name="~use_magnetic_field_msg" value="false" />
      <param name="world_frame" value="enu" />
      <param name="publish_tf" value="false" />
      <param name="publish_debug_topics" value="true" />
    </node>

    <!-- GPS serial comms -->
    <group ns="navsat">

      <group if="$(eval arg('namespace') == '')">
        <node pkg="nmea_comms" type="serial_node" name="nmea_serial_node">
          <param name="port" value="$(optenv HERON_NAVSAT_UBLOX_PORT /dev/ublox)"/>
          <param name="baud" value="$(optenv HERON_NAVSAT_UBLOX_BAUD 115200)"/>
          <param name="frame_id" value="navsat_link" />
        </node>
      </group>

      <group unless="$(eval arg('namespace') == '')">
        <node pkg="nmea_comms" type="serial_node" name="nmea_serial_node">
          <param name="port" value="$(optenv HERON_NAVSAT_UBLOX_PORT /dev/ublox)"/>
          <param name="baud" value="$(optenv HERON_NAVSAT_UBLOX_BAUD 115200)"/>
          <param name="frame_id" value="$(arg namespace)/navsat_link" />
        </node>
      </group>


      <!-- GPS NMEA socket -->
      <node pkg="nmea_comms" type="socket_node" name="nmea_socket_node"
            if="$(optenv HERON_NAVSAT_UBLOX_SOCKET 0)">
        <param name="port" value="$(optenv HERON_NAVSAT_UBLOX_SOCKET_PORT 2525)"/>
        <remap from="tx" to="rx"/>
      </node>

      <!-- interpretation -->
      <node pkg="nmea_navsat_driver" type="nmea_topic_driver" name="nmea_topic_driver"/>
    </group>

    <node pkg="heron_controller" type="controller" name="controller">
      <rosparam file="$(env HERON_CONTROLLER_CONFIG)" />
    </node>

  </group>

  <!-- Basic localization -->
  <rosparam param="/$(arg namespace)/ekf_localization_node/tf_prefix" subst_value="True">/$(arg namespace)</rosparam>
  <rosparam param="/$(arg namespace)/navsat_transform_node/tf_prefix" subst_value="True">/$(arg namespace)</rosparam>
  <include file="$(find heron_control)/launch/control.launch" ns="/$(arg namespace)" />

</launch>
